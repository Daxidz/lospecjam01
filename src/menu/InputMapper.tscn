[gd_scene load_steps=29 format=2]

[ext_resource path="res://src/menu/InputLine.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/fonts/smashcat.tres" type="DynamicFont" id=2]
[ext_resource path="res://src/menu/InputMapper.gd" type="Script" id=3]
[ext_resource path="res://src/menu/InputLines.gd" type="Script" id=4]
[ext_resource path="res://assets/img/menu/RIGHT.png" type="Texture" id=5]
[ext_resource path="res://src/menu/KeyMapper.gd" type="Script" id=6]
[ext_resource path="res://assets/img/menu/START.png" type="Texture" id=7]
[ext_resource path="res://assets/img/menu/B.png" type="Texture" id=8]
[ext_resource path="res://assets/img/menu/LEFT.png" type="Texture" id=9]
[ext_resource path="res://assets/img/menu/A.png" type="Texture" id=10]
[ext_resource path="res://assets/img/menu/DOWN.png" type="Texture" id=11]
[ext_resource path="res://assets/img/menu/UP.png" type="Texture" id=12]
[ext_resource path="res://assets/img/menu/bg_menu.png" type="Texture" id=13]
[ext_resource path="res://src/commenter/Commenter.tscn" type="PackedScene" id=14]

[sub_resource type="Shader" id=1]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform vec4 target_col: hint_color;
uniform vec4 replace_col: hint_color;
uniform bool enabled;

void fragment(){
	if (!enabled) return;
	vec4 cur_color = texture(TEXTURE, UV);
	vec4 bg_col = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	
	vec4 d4 = abs(bg_col - target_col);
    float d = max(max(d4.r, d4.g), d4.b);
	
    float dc = length(UV - 0.5);
    float c = dc < 0.3 ? 1.0 : 0.0;
	
//	if ((d < 0.01) && (cur_color.a > 0.0) && c != 0.0) {
	if ((d < 0.01) && (cur_color.a > 0.0)) {
		COLOR = replace_col;
	} else {
		COLOR.a = 0.0
	}
}"

[sub_resource type="ShaderMaterial" id=2]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/target_col = Color( 0.215686, 0.192157, 0.231373, 1 )
shader_param/replace_col = Color( 0.494118, 0.443137, 0.521569, 1 )
shader_param/enabled = false

[sub_resource type="Shader" id=3]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform vec4 target_col: hint_color;
uniform vec4 replace_col: hint_color;
uniform bool enabled;

void fragment(){
	if (!enabled) return;
	vec4 cur_color = texture(TEXTURE, UV);
	vec4 bg_col = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	
	vec4 d4 = abs(bg_col - target_col);
    float d = max(max(d4.r, d4.g), d4.b);
	
    float dc = length(UV - 0.5);
    float c = dc < 0.3 ? 1.0 : 0.0;
	
//	if ((d < 0.01) && (cur_color.a > 0.0) && c != 0.0) {
	if ((d < 0.01) && (cur_color.a > 0.0)) {
		COLOR = replace_col;
	} else {
		COLOR.a = 0.0
	}
}"

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/target_col = Color( 0.215686, 0.192157, 0.231373, 1 )
shader_param/replace_col = Color( 0.494118, 0.443137, 0.521569, 1 )
shader_param/enabled = false

[sub_resource type="Shader" id=5]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform vec4 target_col: hint_color;
uniform vec4 replace_col: hint_color;
uniform bool enabled;

void fragment(){
	if (!enabled) return;
	vec4 cur_color = texture(TEXTURE, UV);
	vec4 bg_col = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	
	vec4 d4 = abs(bg_col - target_col);
    float d = max(max(d4.r, d4.g), d4.b);
	
    float dc = length(UV - 0.5);
    float c = dc < 0.3 ? 1.0 : 0.0;
	
//	if ((d < 0.01) && (cur_color.a > 0.0) && c != 0.0) {
	if ((d < 0.01) && (cur_color.a > 0.0)) {
		COLOR = replace_col;
	} else {
		COLOR.a = 0.0
	}
}"

[sub_resource type="ShaderMaterial" id=6]
resource_local_to_scene = true
shader = SubResource( 5 )
shader_param/target_col = Color( 0.215686, 0.192157, 0.231373, 1 )
shader_param/replace_col = Color( 0.494118, 0.443137, 0.521569, 1 )
shader_param/enabled = false

[sub_resource type="Shader" id=7]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform vec4 target_col: hint_color;
uniform vec4 replace_col: hint_color;
uniform bool enabled;

void fragment(){
	if (!enabled) return;
	vec4 cur_color = texture(TEXTURE, UV);
	vec4 bg_col = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	
	vec4 d4 = abs(bg_col - target_col);
    float d = max(max(d4.r, d4.g), d4.b);
	
    float dc = length(UV - 0.5);
    float c = dc < 0.3 ? 1.0 : 0.0;
	
//	if ((d < 0.01) && (cur_color.a > 0.0) && c != 0.0) {
	if ((d < 0.01) && (cur_color.a > 0.0)) {
		COLOR = replace_col;
	} else {
		COLOR.a = 0.0
	}
}"

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
shader = SubResource( 7 )
shader_param/target_col = Color( 0.215686, 0.192157, 0.231373, 1 )
shader_param/replace_col = Color( 0.494118, 0.443137, 0.521569, 1 )
shader_param/enabled = false

[sub_resource type="Shader" id=9]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform vec4 target_col: hint_color;
uniform vec4 replace_col: hint_color;
uniform bool enabled;

void fragment(){
	if (!enabled) return;
	vec4 cur_color = texture(TEXTURE, UV);
	vec4 bg_col = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	
	vec4 d4 = abs(bg_col - target_col);
    float d = max(max(d4.r, d4.g), d4.b);
	
    float dc = length(UV - 0.5);
    float c = dc < 0.3 ? 1.0 : 0.0;
	
//	if ((d < 0.01) && (cur_color.a > 0.0) && c != 0.0) {
	if ((d < 0.01) && (cur_color.a > 0.0)) {
		COLOR = replace_col;
	} else {
		COLOR.a = 0.0
	}
}"

[sub_resource type="ShaderMaterial" id=10]
resource_local_to_scene = true
shader = SubResource( 9 )
shader_param/target_col = Color( 0.215686, 0.192157, 0.231373, 1 )
shader_param/replace_col = Color( 0.494118, 0.443137, 0.521569, 1 )
shader_param/enabled = false

[sub_resource type="Shader" id=11]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform vec4 target_col: hint_color;
uniform vec4 replace_col: hint_color;
uniform bool enabled;

void fragment(){
	if (!enabled) return;
	vec4 cur_color = texture(TEXTURE, UV);
	vec4 bg_col = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	
	vec4 d4 = abs(bg_col - target_col);
    float d = max(max(d4.r, d4.g), d4.b);
	
    float dc = length(UV - 0.5);
    float c = dc < 0.3 ? 1.0 : 0.0;
	
//	if ((d < 0.01) && (cur_color.a > 0.0) && c != 0.0) {
	if ((d < 0.01) && (cur_color.a > 0.0)) {
		COLOR = replace_col;
	} else {
		COLOR.a = 0.0
	}
}"

[sub_resource type="ShaderMaterial" id=12]
resource_local_to_scene = true
shader = SubResource( 11 )
shader_param/target_col = Color( 0.215686, 0.192157, 0.231373, 1 )
shader_param/replace_col = Color( 0.494118, 0.443137, 0.521569, 1 )
shader_param/enabled = false

[sub_resource type="Shader" id=13]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform vec4 target_col: hint_color;
uniform vec4 replace_col: hint_color;
uniform bool enabled;

void fragment(){
	if (!enabled) return;
	vec4 cur_color = texture(TEXTURE, UV);
	vec4 bg_col = textureLod(SCREEN_TEXTURE, SCREEN_UV, 0.0);
	
	vec4 d4 = abs(bg_col - target_col);
    float d = max(max(d4.r, d4.g), d4.b);
	
    float dc = length(UV - 0.5);
    float c = dc < 0.3 ? 1.0 : 0.0;
	
//	if ((d < 0.01) && (cur_color.a > 0.0) && c != 0.0) {
	if ((d < 0.01) && (cur_color.a > 0.0)) {
		COLOR = replace_col;
	} else {
		COLOR.a = 0.0
	}
}"

[sub_resource type="ShaderMaterial" id=14]
resource_local_to_scene = true
shader = SubResource( 13 )
shader_param/target_col = Color( 0.215686, 0.192157, 0.231373, 1 )
shader_param/replace_col = Color( 0.494118, 0.443137, 0.521569, 1 )
shader_param/enabled = false

[node name="InputMapper" type="Control"]
pause_mode = 2
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
script = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 13 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer" type="HBoxContainer" parent="."]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -103.0
margin_top = -11.0
margin_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="HBoxContainer"]
margin_top = 3.0
margin_right = 87.0
margin_bottom = 9.0
custom_fonts/font = ExtResource( 2 )
text = "Use controller"
uppercase = true

[node name="TextureRect" type="TextureRect" parent="HBoxContainer"]
margin_left = 91.0
margin_right = 103.0
margin_bottom = 12.0
texture = ExtResource( 8 )

[node name="VBoxContainer" type="VBoxContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = 1.0
margin_bottom = 1.0
custom_constants/separation = 5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="VBoxContainer"]
visible = false
margin_right = 240.0

[node name="PlayerSelect" type="HBoxContainer" parent="VBoxContainer"]
margin_right = 240.0
margin_bottom = 6.0
size_flags_horizontal = 3
custom_constants/separation = 0
alignment = 1

[node name="P1" type="Label" parent="VBoxContainer/PlayerSelect"]
margin_right = 60.0
margin_bottom = 6.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_fonts/font = ExtResource( 2 )
custom_colors/font_color = Color( 0.917647, 0.882353, 0.941176, 1 )
text = "P1"
align = 1
valign = 1

[node name="P2" type="Label" parent="VBoxContainer/PlayerSelect"]
margin_left = 60.0
margin_right = 120.0
margin_bottom = 6.0
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 2 )
custom_colors/font_color = Color( 0.917647, 0.882353, 0.941176, 1 )
text = "P2"
align = 1

[node name="P3" type="Label" parent="VBoxContainer/PlayerSelect"]
margin_left = 120.0
margin_right = 180.0
margin_bottom = 6.0
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 2 )
custom_colors/font_color = Color( 0.917647, 0.882353, 0.941176, 1 )
text = "P3"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="P4" type="Label" parent="VBoxContainer/PlayerSelect"]
margin_left = 180.0
margin_right = 240.0
margin_bottom = 6.0
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 2 )
custom_colors/font_color = Color( 0.917647, 0.882353, 0.941176, 1 )
text = "P4"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Labels" type="HBoxContainer" parent="VBoxContainer"]
margin_top = 11.0
margin_right = 240.0
margin_bottom = 17.0

[node name="Action" type="Label" parent="VBoxContainer/Labels"]
margin_right = 118.0
margin_bottom = 6.0
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 2 )
custom_colors/font_color = Color( 0.917647, 0.882353, 0.941176, 1 )
text = "Action"
align = 1
uppercase = true

[node name="Input" type="Label" parent="VBoxContainer/Labels"]
margin_left = 122.0
margin_right = 240.0
margin_bottom = 6.0
size_flags_horizontal = 3
custom_fonts/font = ExtResource( 2 )
custom_colors/font_color = Color( 0.917647, 0.882353, 0.941176, 1 )
text = "Input"
align = 1
uppercase = true

[node name="InputLines" type="VBoxContainer" parent="VBoxContainer"]
margin_top = 22.0
margin_right = 240.0
margin_bottom = 126.0
size_flags_horizontal = 3
script = ExtResource( 4 )

[node name="A" parent="VBoxContainer/InputLines" instance=ExtResource( 1 )]
material = SubResource( 2 )
margin_bottom = 12.0
focus_mode = 0
texture = ExtResource( 10 )

[node name="B" parent="VBoxContainer/InputLines" instance=ExtResource( 1 )]
material = SubResource( 4 )
margin_top = 16.0
margin_bottom = 28.0
texture = ExtResource( 8 )

[node name="LEFT" parent="VBoxContainer/InputLines" instance=ExtResource( 1 )]
material = SubResource( 6 )
margin_top = 32.0
margin_bottom = 44.0
texture = ExtResource( 9 )

[node name="RIGHT" parent="VBoxContainer/InputLines" instance=ExtResource( 1 )]
material = SubResource( 8 )
margin_top = 48.0
margin_bottom = 59.0
texture = ExtResource( 5 )

[node name="UP" parent="VBoxContainer/InputLines" instance=ExtResource( 1 )]
material = SubResource( 10 )
margin_top = 63.0
margin_bottom = 74.0
texture = ExtResource( 12 )

[node name="DOWN" parent="VBoxContainer/InputLines" instance=ExtResource( 1 )]
material = SubResource( 12 )
margin_top = 78.0
margin_bottom = 89.0
texture = ExtResource( 11 )

[node name="START" parent="VBoxContainer/InputLines" instance=ExtResource( 1 )]
material = SubResource( 14 )
margin_top = 93.0
margin_bottom = 104.0
texture = ExtResource( 7 )

[node name="KeyMapper" type="Node" parent="."]
script = ExtResource( 6 )

[node name="Comentator" parent="." instance=ExtResource( 14 )]
position = Vector2( 0, 100 )
